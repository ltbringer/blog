{"componentChunkName":"component---src-templates-post-js","path":"/selection-sort-after-6-years-of-experience","result":{"data":{"markdownRemark":{"html":"<h1 id=\"selection-sort\" style=\"position:relative;\"><a href=\"#selection-sort\" aria-label=\"selection sort permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Selection Sort</h1>\n<p>I have been focusing on programming challenges recently and noticed the commonly available material on the internet.\nThere is a great focus on completion, efficiency, in some cases attempts to test but rare is the readability.</p>\n<p>An example of this will be picked in the selection <a href=\"https://www.geeksforgeeks.org/selection-sort/\">sort algorithm</a>. <sup id=\"fnref-1\"><a href=\"#fn-1\" class=\"footnote-ref\">1</a></sup></p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">selection_sort</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        \n        <span class=\"token comment\"># Find the minimum element in remaining </span>\n        <span class=\"token comment\"># unsorted array</span>\n        min_idx <span class=\"token operator\">=</span> i\n        <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">if</span> array<span class=\"token punctuation\">[</span>min_idx<span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> array<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n                min_idx <span class=\"token operator\">=</span> j\n                \n        <span class=\"token comment\"># Swap the found minimum element with </span>\n        <span class=\"token comment\"># the first element        </span>\n        array<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> array<span class=\"token punctuation\">[</span>min_idx<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> array<span class=\"token punctuation\">[</span>min_idx<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> array<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span>\n\n    <span class=\"token keyword\">return</span> array</code></pre></div>\n<p>This works but I dislike this solution isn't human readable. I remember mugging up the sequence of instructions\nin my school days. I'll try these simple exercises periodically to see how well I can communicate over the years.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">argmax</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> <span class=\"token builtin\">max</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> key<span class=\"token operator\">=</span><span class=\"token keyword\">lambda</span> el<span class=\"token punctuation\">:</span> array<span class=\"token punctuation\">[</span>el<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">swap_idx</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">,</span> idx1<span class=\"token punctuation\">,</span> idx2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    array<span class=\"token punctuation\">[</span>idx1<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> array<span class=\"token punctuation\">[</span>idx2<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> array<span class=\"token punctuation\">[</span>idx2<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> array<span class=\"token punctuation\">[</span>idx1<span class=\"token punctuation\">]</span>\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">selection_sort</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    i <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n    array_size <span class=\"token operator\">=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">while</span> array_size <span class=\"token operator\">-</span> i <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n        largest_idx <span class=\"token operator\">=</span> argmax<span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span>array_size <span class=\"token operator\">-</span> i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n        current_last_index <span class=\"token operator\">=</span> araay_size <span class=\"token operator\">-</span> i <span class=\"token operator\">-</span> <span class=\"token number\">1</span>\n        swap_idx<span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">,</span> largest_idx<span class=\"token punctuation\">,</span> current_last_index<span class=\"token punctuation\">)</span>\n        i <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n    <span class=\"token keyword\">return</span> array</code></pre></div>\n<p>IMO this does a better job of conveying what the algorithm is expected to do.</p>\n<ul>\n<li>Pick the largest/smallest element in the array.</li>\n<li>Swap it with the element at last/first available position.</li>\n<li>Reduce the range of motion by 1.</li>\n</ul>\n<p>I still dislike the presence of <code class=\"language-text\">while</code> and the iteration variable <code class=\"language-text\">i</code> it is evident in my last point <em>\"Reduce the range of motion by 1\"</em>\nthat I can't explain the idea well.</p>\n<div class=\"footnotes\">\n<hr>\n<ol>\n<li id=\"fn-1\">\n<p>I picked the top search result at the time of this writing.</p>\n<a href=\"#fnref-1\" class=\"footnote-backref\">↩</a>\n</li>\n</ol>\n</div>","timeToRead":1,"excerpt":"Selection Sort I have been focusing on programming challenges recently and noticed the commonly available material on the internet.\nThere is…","frontmatter":{"title":"Selection sort after 6 years of experience.","cover":"https://picsum.photos/seed/seed_n/1500/300","date":"2022-02-20T00:00:00.000Z","categories":["programming"],"tags":null},"fields":{"slug":"/selection-sort-after-6-years-of-experience","date":"February 19, 2022"}}},"pageContext":{"slug":"/selection-sort-after-6-years-of-experience","nexttitle":"Fear of conflict","nextslug":"/fear-of-conflict","prevtitle":"Reanimation","prevslug":"/reanimation"}},"staticQueryHashes":["3969716136"]}