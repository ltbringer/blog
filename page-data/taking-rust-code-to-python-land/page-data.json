{"componentChunkName":"component---src-templates-post-js","path":"/taking-rust-code-to-python-land","result":{"data":{"markdownRemark":{"html":"<p>There are plenty of cases where an algorithm in python doesn't cut the speed benchmarks, or sometimes there is a strong need for that low level control. Porting code to <code class=\"language-text\">cython</code>, <code class=\"language-text\">c</code> or <code class=\"language-text\">c++</code> have proven to give serious speed boosts. I recently needed to do <a href=\"https://ltbringer.github.io/blog/regular-expressions-and-efficiency\">something similar</a>, a use-case where speed was of utmost importance. </p>\n<p>I picked rust because of its different take on memory management. This means the allocations and freeing memory are not left up to the developer to forget or remember. This alone leads to security flaws, segmentation faults, memory leaks and while there is tooling available to find and fix these issues, they still take significant amount of time to get done. The native unicode support, the <code class=\"language-text\">vector</code> type which is friendly for providing inputs of unbounded length, advanced type system, helpful error messages were couple of features that made it an attractive option.</p>\n<h2 id=\"ingredients\" style=\"position:relative;\"><a href=\"#ingredients\" aria-label=\"ingredients permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Ingredients</h2>\n<ul>\n<li>An installation of Rust.</li>\n<li>A virtual environment running python 3.5 and above.</li>\n<li>A blob of <a href=\"https://github.com/PyO3/pyo3\">pyo3</a>.</li>\n<li>An algorithm to port.</li>\n<li>Dedication as per taste.</li>\n<li>Leave it to <a href=\"https://github.com/PyO3/maturin\">maturin</a>.</li>\n</ul>\n<p>We'll take two cases for now. If I find more cases not covered by these generalizations, I'll add them here.</p>\n<ol>\n<li>Porting a function.</li>\n<li>Porting a state-ful object.</li>\n</ol>\n<p>The first is possibly a case where, say your python code has an <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><msup><mi>n</mi><mn>3</mn></msup><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(n^3)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.064108em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathdefault\">n</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span> complexity (there is a possibility to optimize the algorithm by re-thinking the data structure) and it would help to squeeze out some statically typed goodness.</p>\n<p>The second case is where you would instantiate a class object, maybe this reads a file? parses the strings and builds a data structure that assists many operations? We will be using Rust's <code class=\"language-text\">struct</code> for supporting this feature.</p>","timeToRead":1,"excerpt":"There are plenty of cases where an algorithm in python doesn't cut the speed benchmarks, or sometimes there is a strong need for that lowâ€¦","frontmatter":{"title":"Taking Rust code to Python land","cover":"https://unsplash.it/1152/300/?random?BirchintheRoses","date":"2020-05-20T00:00:00.000Z","categories":["programming"],"tags":["rust","python","pyo3","maturin"]},"fields":{"slug":"/taking-rust-code-to-python-land","date":"May 19, 2020"}}},"pageContext":{"slug":"/taking-rust-code-to-python-land","nexttitle":"Text classification conflicts and hierarchical models","nextslug":"/text-classification-conflicts-and-hierarchical-models","prevtitle":"Thread Communication simulation","prevslug":"/thread-communication-simulation"}}}