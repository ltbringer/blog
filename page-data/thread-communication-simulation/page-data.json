{"componentChunkName":"component---src-templates-post-js","path":"/thread-communication-simulation","result":{"data":{"markdownRemark":{"html":"<p>Let's say we have: </p>\n<ol>\n<li>A buffer of limited size.</li>\n<li>A couple of producers.</li>\n<li>A couple of consumers.</li>\n</ol>\n<p>What happens when producers try to fill the buffer while consumers are simultaneously trying to read the buffer. We want to understand <code class=\"language-text\">deadlocks</code>, <code class=\"language-text\">livelocks</code> and what should be done for a normal operation.</p>\n<iframe height=\"900px\" width=\"100%\" src=\"https://repl.it/@amreshvenugopal/DemandingQuestionablePhp?lite=true\" scrolling=\"no\" frameborder=\"no\" allowtransparency=\"true\" allowfullscreen=\"true\" sandbox=\"allow-forms allow-pointer-lock allow-popups allow-same-origin allow-scripts allow-modals\"></iframe>\n<p>The detail is in the wait over <code class=\"language-text\">while(buffer.isEmpty)</code> in the implementation of <code class=\"language-text\">Consumer</code> so if the current <code class=\"language-text\">thread</code> is active, and <code class=\"language-text\">buffer</code> is not empty, only then is a <code class=\"language-text\">consumer</code> allowed to read off the `buffer.</p>\n<p><em>to be continued...</em></p>","timeToRead":1,"excerpt":"Let's say we have:  A buffer of limited size. A couple of producers. A couple of consumers. What happens when producers try to fill theâ€¦","frontmatter":{"title":"Thread Communication simulation","cover":"https://unsplash.it/1152/300/?random?BirchintheRoses","date":"2020-04-20T00:00:00.000Z","categories":["programming"],"tags":["scala","parallel"]},"fields":{"slug":"/thread-communication-simulation","date":"April 19, 2020"}}},"pageContext":{"slug":"/thread-communication-simulation","nexttitle":"Negative labels for classification","nextslug":"/negative-labels-for-classification","prevtitle":"Lucifer's pen","prevslug":"/lucifers-pen"}}}